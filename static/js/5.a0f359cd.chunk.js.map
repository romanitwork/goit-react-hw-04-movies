{"version":3,"sources":["pages/MoviesPage.js"],"names":["queryString","require","activeStyle","color","inputStyle","width","MoviesPage","state","movies","value","hasError","error","componentDidMount","a","location","props","parse","search","query","BASE_URL","axios","get","then","setState","data","results","console","log","componentDidUpdate","prevProps","length","PNotify","closeAll","notice","history","replace","e","handleChange","target","handleSubmit","preventDefault","push","pathname","this","onSubmit","style","onChange","type","map","el","key","shortid","to","id","from","locationLink","original_title","Component"],"mappings":"4PAMMA,EAAcC,EAAQ,IAEtBC,EAAc,CAClBC,MAAO,iBAGHC,EAAa,CACjBC,MAAO,SAGHC,E,2MACJC,MAAQ,CACNC,OAAQ,GACRC,MAAO,GACPC,UAAU,EACVC,MAAO,I,EAGTC,kB,sBAAoB,kCAAAC,EAAA,yDACVC,EAAa,EAAKC,MAAlBD,SADU,EAEAd,EAAYgB,MAAMF,EAASG,QAArCC,EAFU,EAEVA,MACFC,EAHY,6IAGqID,GAHrI,UAKZA,EALY,gCAMRE,IAAMC,IAAIF,GAAUG,MAAK,SAAAd,GAC7B,EAAKe,SAAS,CACZf,OAAQA,EAAOgB,KAAKC,aARV,uDAahBC,QAAQC,IAAI,QAAZ,MAbgB,yD,EAiBpBC,mBAAqB,SAAAC,GAAc,IACzBf,EAAa,EAAKC,MAAlBD,SACAI,EAAUlB,EAAYgB,MAAMF,EAASG,QAArCC,MACFC,EAAQ,6IAAyID,GAEvJ,IACE,GAAIW,EAAUf,SAASG,SAAWH,EAASG,OAYzC,YAXAG,IAAMC,IAAIF,GAAUG,MAAK,SAAAd,GACY,IAA/BA,EAAOgB,KAAKC,QAAQK,OACtB,EAAKP,SAAS,CACZf,OAAQA,EAAOgB,KAAKC,WAGtBM,IAAQC,WACRD,IAAQE,OAAO,8CACf,EAAKlB,MAAMmB,QAAQC,QAAQ,eAKjC,MAAOC,GACPV,QAAQC,IAAI,QAASS,K,EAIzBC,aAAe,SAAAD,GACbL,IAAQC,WACR,EAAKT,SAAS,CACZd,MAAO2B,EAAEE,OAAO7B,S,EAIpB8B,aAAe,SAAAH,GACbA,EAAEI,iBAEuB,KAArB,EAAKjC,MAAME,OACb,EAAKM,MAAMmB,QAAQO,KAAK,KAG1B,EAAKlB,SAAS,CACZd,MAAO,KAGT,EAAKM,MAAMmB,QAAQO,KAAK,CACtBC,SAAU,EAAK3B,MAAMD,SAAS4B,SAC9BzB,OAAO,SAAD,OAAW,EAAKV,MAAME,U,wEAItB,IAAD,SACmBkC,KAAKpC,MAAvBE,EADD,EACCA,MAAOD,EADR,EACQA,OAEf,OACE,oCACE,0BAAMoC,SAAUD,KAAKJ,cACnB,2BACEM,MAAOzC,EACP0C,SAAUH,KAAKN,aACf5B,MAAOA,IAGT,4BAAQsC,KAAK,UAAb,WAGF,4BACGvC,EAAOwC,KAAI,SAAAC,GAAE,OACZ,wBAAIC,IAAKC,OACP,kBAAC,IAAD,CACEC,GAAI,CACFV,SAAS,WAAD,OAAaO,EAAGI,IACxB9C,MAAO,CACL+C,KAAM,EAAKvC,MAAMD,SACjByC,aACE,EAAKxC,MAAMD,SAAS4B,SAAW,EAAK3B,MAAMD,SAASG,SAGzDf,YAAaA,GAEZ+C,EAAGO,0B,GAvGKC,aAiHVnD","file":"static/js/5.a0f359cd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PNotify from \"pnotify/dist/es/PNotify\";\r\nimport PNotifyBrightTheme from \"../../node_modules/pnotify/dist/PNotifyBrightTheme.css\";\r\nimport axios from \"axios\";\r\nimport shortid from \"shortid\";\r\nimport { NavLink} from \"react-router-dom\";\r\nconst queryString = require(\"query-string\");\r\n\r\nconst activeStyle = {\r\n  color: \"palevioletred\"\r\n};\r\n\r\nconst inputStyle = {\r\n  width: \"250px\"\r\n};\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    value: \"\",\r\n    hasError: false,\r\n    error: \"\"\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const { location } = this.props;\r\n    const { query } = queryString.parse(location.search);\r\n    const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=cf7e1750a0f8b90bb35162b1428fcf90&language=en-US&page=1&include_adult=false&query=${query}`;\r\n    try {\r\n      if (query) {\r\n        await axios.get(BASE_URL).then(movies => {\r\n          this.setState({\r\n            movies: movies.data.results\r\n          });\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error\", e);\r\n    }\r\n  };\r\n\r\n  componentDidUpdate = prevProps => {\r\n    const { location } = this.props;\r\n    const { query } = queryString.parse(location.search);\r\n    const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=cf7e1750a0f8b90bb35162b1428fcf90&language=en-US&page=1&include_adult=false&query=${query}`;\r\n\r\n    try {\r\n      if (prevProps.location.search !== location.search) {\r\n        axios.get(BASE_URL).then(movies => {\r\n          if (movies.data.results.length !== 0) {\r\n            this.setState({\r\n              movies: movies.data.results\r\n            });\r\n          } else {\r\n            PNotify.closeAll();\r\n            PNotify.notice(\"Nothing was found 🤷🏾\");\r\n            this.props.history.replace(\"/movies\");\r\n          }\r\n        });\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error\", e);\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    PNotify.closeAll();\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.value === \"\") {\r\n      this.props.history.push(\"/\");\r\n    }\r\n\r\n    this.setState({\r\n      value: \"\"\r\n    });\r\n\r\n    this.props.history.push({\r\n      pathname: this.props.location.pathname,\r\n      search: `query=${this.state.value}`\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, movies } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            style={inputStyle}\r\n            onChange={this.handleChange}\r\n            value={value}\r\n          ></input>\r\n\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        <ul>\r\n          {movies.map(el => (\r\n            <li key={shortid()}>\r\n              <NavLink\r\n                to={{\r\n                  pathname: `/movies/${el.id}`,\r\n                  state: {\r\n                    from: this.props.location,\r\n                    locationLink:\r\n                      this.props.location.pathname + this.props.location.search\r\n                  }\r\n                }}\r\n                activeStyle={activeStyle}\r\n              >\r\n                {el.original_title}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}